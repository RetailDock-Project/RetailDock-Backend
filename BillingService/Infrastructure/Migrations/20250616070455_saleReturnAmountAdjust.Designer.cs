// <auto-generated />
using System;
using Infrastructure.BillingContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BillingDbContext))]
    [Migration("20250616070455_saleReturnAmountAdjust")]
    partial class saleReturnAmountAdjust
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entites.CashCustomers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("CashCustomers");
                });

            modelBuilder.Entity("Domain.Entites.CreditCustomers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("GstNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CreditCustomers");
                });

            modelBuilder.Entity("Domain.Entites.SaleItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("CGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("HSNCodeNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("IGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxableAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("Domain.Entites.Sales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CashCustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DebtorsId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GST_Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Narration")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SalesType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalUnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CashCustomerId");

                    b.HasIndex("DebtorsId");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Domain.Entites.SalesInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("B2BInvoiceNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("B2CInvoiceNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("TaxableAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalCGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalIGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalSGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalUGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("SalesInvoices");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ReturnInvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("TotalUnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ReturnInvoiceId")
                        .IsUnique();

                    b.HasIndex("SaleId")
                        .IsUnique();

                    b.ToTable("SalesReturn");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturnInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("B2BReturnInvoiceNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("B2CReturnInvoiceNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TaxableAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalCGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalIGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalSGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalUGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("SalesReturnInvoice");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturnItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("CGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("HSNCodeNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("IGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ReturnId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("SGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxableAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UGST")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ReturnId");

                    b.ToTable("SalesReturnItems");
                });

            modelBuilder.Entity("Domain.Entites.SaleItems", b =>
                {
                    b.HasOne("Domain.Entites.Sales", "Sales")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entites.Sales", b =>
                {
                    b.HasOne("Domain.Entites.CashCustomers", "CashCustomers")
                        .WithMany("Sales")
                        .HasForeignKey("CashCustomerId");

                    b.HasOne("Domain.Entites.CreditCustomers", "CreditCustomers")
                        .WithMany("Sales")
                        .HasForeignKey("DebtorsId");

                    b.HasOne("Domain.Entites.SalesInvoice", "Invoices")
                        .WithOne("Sales")
                        .HasForeignKey("Domain.Entites.Sales", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashCustomers");

                    b.Navigation("CreditCustomers");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturn", b =>
                {
                    b.HasOne("Domain.Entites.SalesReturnInvoice", "ReturnInvoice")
                        .WithOne("SalesReturn")
                        .HasForeignKey("Domain.Entites.SalesReturn", "ReturnInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.Sales", "Sales")
                        .WithOne("SalesReturn")
                        .HasForeignKey("Domain.Entites.SalesReturn", "SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnInvoice");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturnItems", b =>
                {
                    b.HasOne("Domain.Entites.SalesReturn", "SalesReturn")
                        .WithMany("SalesReturnItems")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesReturn");
                });

            modelBuilder.Entity("Domain.Entites.CashCustomers", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entites.CreditCustomers", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entites.Sales", b =>
                {
                    b.Navigation("SaleItems");

                    b.Navigation("SalesReturn")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entites.SalesInvoice", b =>
                {
                    b.Navigation("Sales")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entites.SalesReturn", b =>
                {
                    b.Navigation("SalesReturnItems");
                });

            modelBuilder.Entity("Domain.Entites.SalesReturnInvoice", b =>
                {
                    b.Navigation("SalesReturn")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
